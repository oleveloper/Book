---
layout: post
title: "Kubernetes_17 Manual Scheduling"
date: 2023-01-06
last_modified_at: 2023-01-06
categories: [Kubernetes]
tags: [Kubernetes]
---

# Manual Scheduling

이번에는 노드에서의 pod 수동 스케줄링에 대해 이야기하도록 한다.   
클러스터에 스케줄러가 없을 때에는 어떻게 동작해야할까?   
아마 사용자들은 직접 pod를 스케줄링 하는 대신 Built-in 스케줄러에 의존하고 싶지 않을 것이다.    
그렇다면 스케줄러는 백엔드에서 어떻게 작동할까?   

pod 정의 파일부터 시작하자.   
모든 pod에는 nodeName이라는 필드가 있다.    
```yml
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    name: nginx
spec:
  containers:
  - name: nginx
    image: nginx
    ports:
      - containerPort: 8080
  nodeName:
```

이 필드는 기본으로 설정되어 있지 않다.   
일반적으로 이 필드를 지정하지 않으면 pod manifest 파일을 만들 때 쿠버네티스가 자동으로 추가해주는 필드이다.   

스케줄러는 모든 pod를 보고 이 속성이 설정되지 않은 항목을 찾는다.   
<img width="604" alt="스크린샷 2023-01-06 오후 9 13 47" src="https://user-images.githubusercontent.com/83587720/211010757-e9b13038-2fdf-4fbf-b10e-604ef3b15d45.png">

위의 node들은 스케줄링 대상이다.    
쿠버네티스는 스케줄링 알고리즘을 실행해 pod에 적합한 노드를 식별한다.    
식별이 되면, 노드에서 바인딩 오브젝트를 생성함으로써 node name 속성을 노드의 이름으로 설정해 pod를 스케줄한다.    
따라서 노드를 모니터링하고 스케줄링 할 스케줄러가 없다면 pod는 계속 pending 상태일 것이다.   

그럼 이런 상태(pending)에 대해 어떤 행동을 취할 수 있을까?   
pod를 노드에 수동으로 할당하는 것이다.   
스케줄러 없이 pod를 스케줄링하는 가장 쉬운 방법은    
pod를 생성할 때 pod-definition 파일에서 nodeName 필드를 노드 이름으로 설정하는 것이다.   
그렇게 하면 pod가 지정된 노드에 할당이 된다.    

노드 이름은 생성 시에만 지정할 수 있다.    
그렇다면 pod가 이미 생성된 경우에 노드에 할당하려면 어떻게 할까?   
쿠버네티스는 pod의 노드 이름 프로퍼티에 대한 수정을 허용하지 않는다.    
따라서 이미 존재하는 pod에 노드를 할당하는 다른 방법은,   
바인딩 오브젝트를 만들고 pod의 바인딩 API에 POST 요청을 보내는 것이다.    
```yml
apiVersion: v1
kind: Binding
metadata:
  name: nginx
target:
  apiVersion: v1
  kind: Node
  name: node02
```
(위) Pod-bind-definition.yaml

이렇게 함으로서 실제 스케줄러가 수행하는 작업을 따라한다.   
바인딩 오브젝트에서는 노드의 이름으로 target node를 지정한다.    
그런 다음 pod의 바인딩 API에 POST요청을 보낸다.    

데이터는 Json 형식의 바인딩 오브젝트이다.    
따라서 YAML 파일을 Json 형식으로 변환해야 한다.   
