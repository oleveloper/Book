---
layout: post
title: "Kubernetes_81 Control Plane Failure"
date: 2023-01-31
last_modified_at: 2023-01-31
categories: [Kubernetes]
tags: [Kubernetes]
---

# Control Plane Failure

control plane failures을 해결하는 다양한 방법에 대해 알아보자.
먼저 클러스터에서 node의 상태를 확인하여 node가 모두 정상인지 확인한다.
```
kubectl get nodes
```
그런 다음 클러스터에서 실행 중인 pod의 상태를 확인한다.
```
kubectl get pods
```
kubeadm tool을 사용해 클러스터를 배포한 경우, pod로 배포된 control plane 컴포넌트가 있다면 kube-system 네임스페이스의 pod가 실행 중인지 확인할 수 있다. 또한 control plane 컴포넌트가 예제와 같이 서비스로 배포된 경우에도 마찬가지이다.
```
kubectl get pods -n kube-system
```

그다음 kube API 서버, 마스터 노드의 컨트롤러 매니저 및 스케줄러, worker node의 kubelet 및 kube proxy 서비스와 같은 서비스의 상태를 확인한다.
```
service kube-apiserver status
service kube-controller-manager status
service kube-scheduler status
```
다음으로 control plane의 로그를 확인한다.
```
service kubelet status
service kube-proxy status
```
kubeadm의 경우, kube control logs 명령을 사용하여 control plane를 호스팅하는 pod의 로그를 본다.
마스터 노드에서 기본적으로 구성된 서비스의 경우 호스트 로깅 솔루션을 사용하여 서비스 로그를 본다.
```
kubectl logs kube-apiserver-master -n kube-system
```
이 경우 저널 제어 유틸리티를 사용하여 kube API 서버의 로그를 볼 수 있다.
```
sudo journalctl -u kube-apiserver
```
