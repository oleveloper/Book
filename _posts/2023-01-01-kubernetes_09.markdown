---
layout: post
title: "Kubernetes_09"
date: 2023-01-03
last_modified_at: 2023-01-03
categories: [Kubernetes]
tags: [Kubernetes]
---

# ReplicaSets

컨트롤러는 쿠버네티스 뒤에 있는 두뇌이다.
컨트롤러는 쿠버네티스 오브젝트들을 모니터링하고 모니터링에 따라 반응한다.
본문에서는 그 컨트롤러 중에서도 Replication Controller에 대해 이야기한다.

Replica란 무엇이며 Replication Controller가 필요한 이유는 무엇일까?

애플리케이션을 실행하는 단일 pod가 있었던 이전의 시나리오를 생각해보자.
어떠한 이유로 애플리케이션이 중단되고 pod에 장애가 발생하면 어떻게 되는가?
유저는 더 이상 애플리케이션에 접근 할 수 없다.
유저가 애플리케이션에 대한 접근 권한을 잃는 것을 방지하기 위해 두 개 이상의 인스턴스 또는 pod를 동시에 실행하면
하나가 실패하더라도 다른 하나에서 애플리케이션을 계속 실행할 수 있다.

Replication Controller를 사용하면 쿠버네티스 클러스터에서 단일 pod의 여러 인스턴스를 실행할 수 있으므로 고가용성을 제공할 수 있다.
그렇다면 단일 pod를 사용할 계획이라면 Replication Controller를 사용할 수 없다는 뜻일까?
아니다. 단일 포드가 있는 경우에도 Replication Controller는 기존 pod에 장애가 발생할 때 새 pod를 자동으로 불러와 도움을 줄 수 있다.
따라서 Replication Controller는 지정된 수의 pod가 1개 또는 100개라도 항상 실행되도록 한다.

Replication Controller가 필요한 또 다른 이유는 부하를 분산하기 위해 여러 pod를 만들 수 있기 때문이다.
예를 들어, 유저 set에 서비스를 제공하는 단일 pod가 있다는 간단한 시나리오를 생각해보자.
사용자 수가 증가하면 두 부분에 걸쳐 부하 균형을 맞추기 위해 추가 pod를 배치한다.
사용자가 더 증가하여 첫번째 노드의 리소스가 부족할 경우 클러스터의 다른 노드에 추가적으로 구축할 수 있다.

Replication Controller는 클러스터의 여러 노드에 걸쳐 있다.
다양한 노드의 여러 pod 간에 로드 밸런싱을 수행하고, 요청이 증가할 때 애플리케이션을 확장할 수 있도록 한다.

## Replication Controller와 Replica Set
둘 다 같은 목적을 가지고 있지만 같지 않다.
Replication Controller는 Replica Set 이전의 기술이다.
Replica Set은 replication을 설정하는 새로운 방법이다. (권장)
각각의 동작 방식에는 사소한 차이가 있으며, 앞으로는 Replica Set을 사용하도록 한다.




