---
layout: post
title: "Kubernetes_20 Node Selectors"
date: 2023-01-06
last_modified_at: 2023-01-06
categories: [Kubernetes]
tags: [Kubernetes]
---

# Node Selectors

세 개의 노드 클러스터가 있다고 가정하자.   
그 중 두 개는 나머지 하나의 노드보다 더 작은 하드웨어 리소스를 가진 노드이다.    
클러스터에서 실행 중인 다양한 종류의 workloads가 있다고 하자.    
작업에 추가적인 리소스가 필요한 경우, 리소스가 부족하지 않는 유일한 노드이기 때문에   
제일 큰 노드에 더 큰 성능이 필요한 데이터 처리 워크로드를 전담하게 하고 싶다.   

그러나 현재 설정에서는 모든 pod가 모든 노드로 이동할 수 있다.   
그럼 이 경우에 pod C는 바람직하지 않은(더 작은 하드웨어 리소스를 가진) 2번이나 3번 노드에서 종료될 수도 있다.    
이 문제를 해결하기 위해 특정 노드에서만 실행되도록 pod에 제한을 둘 수 있다.    

두 가지 방법을 사용할 수 있다.   
첫번째는 node selector를 사용하는 것이다. 이것은 간단하고 쉬운 방법이다.   
이전에 생성했던 pod 정의 파일을 보자.    
```
apiVersion:
kind: Pod
metadata:
  name: myapp-pod
spec:
  containers:
  - name: data-processor
    image: data-processor
  nodeSelector:
    size: Large
```
위 파일은 데이터 처리 이미지가 있는 pod를 생성하는 간단한 정의를 가지고 있다.   
이 pod가 더 큰 노드에서 실행되도록 제한을 두기 위해서 우리는 node selector라는 새로운 속성을   
스펙 섹션에 추가하고, 크기를 Large로 지정한다.   

쿠버네티스는 어떤 노드가 큰 노드인지 어떻게 알 수 있을까?   
size: Large 부분은 사실 노드에 할당되는 레이블 값이다.   

스케줄러는 pod를 배치할 올바른 노드를 일치시키고 식별하는 데에 이 레이블을 사용한다.   
이와 같이 node selector에서 레이블을 사용하려면 pod를 만들기 전에 먼저 노드에 레이블을 지정해야 한다.   

다시 돌아가서, 노드에 레이블을 지정하는 방법을 살펴보자.   
노드에 레이블을 지정하기 위해서는 아래와 같은 명령어를 사용한다.   

```shell
kubectl label nodes <node-name> <label-key>=<label-value>
```
이제 노드에 레이블을 지정했으므로, pod 생성으로 돌아갈 수 있다.   
pod-definition.yml의 nodeSelector가 Large로 설정되어 있다.   
pod가 생성되면 원하는 대로 노드1에 배치될 것이다.   
