---
layout: post
title: "Kubernetes_40 Backup and Restore Methods"
date: 2023-01-13
last_modified_at: 2023-01-13
categories: [Kubernetes]
tags: [Kubernetes]
---

# Backup and Restore Methods

먼저 Kubernetes 클러스터에서 백업을 고려해야 할 사항을 살펴보자.

이 과정에서는 지금까지 deployments, pod 및 서비스 정의 파일을 사용하여 Kubernetes 클러스터에 다양한 애플리케이션을 구축했다. 
etcd 클러스터는 모든 클러스터 관련 정보가 저장되는 곳이며, 애플리케이션이 persistent 스토리지로 구성되어 있는 경우 백업의 또 다른 대상이 된다. 
클러스터에서 생성한 리소스와 관련하여 네임스페이스, secret 또는 configure map을 생성하거나 애플리케이션을 노출하는 등 명령을 실행하여 객체를 생성하는 필수적인 방법을 사용하는 경우가 있다. 
그리고 때로는 정의 파일을 먼저 만든 다음 해당 파일에 대해 kubectl apply 명령을 실행하는 선언적 접근 방식을 사용했다. 
단일 폴더에 object 정의 파일 형식으로 단일 애플리케이션에 필요한 모든 object가 있으므로 configuration을 저장하는 경우 이 방법이 선호된다. 
이 방법을 사용하면 나중에 쉽게 재사용하거나 다른 사용자와 공유할 수 있다. 
물론 이러한 파일의 복사본은 항상 저장되어야 한다. 이를 소스 코드 저장소에 저장하여 팀이 유지 관리할 수 있도록 하는 것이 좋다. 

올바른 백업 솔루션으로 소스 코드 저장소를 구성해야 한다. GitHub와 같은 관리형 또는 공용 소스 코드 저장소를 사용하면 이에 대해 걱정할 필요가 없다. 
전체 클러스터가 손실된 경우에도 이러한 구성 파일을 클러스터에 적용하기만 하면 애플리케이션을 클러스터에 다시 배포할 수 있다. 
선언적 접근 방식이 선호되는 접근 방식이지만 팀원 모두가 이러한 표준을 고수할 필요는 없다. 
만약 누군가가 그 정보를 문서화하지 않고 명령적인 방법으로 객체를 만들었다면 어떨까? 
리소스 구성을 백업하는 더 좋은 방법은 Kube API 서버를 쿼리하는 것이다. 
kubectl을 사용하거나 API 서버에 직접 액세스하여 Kube API 서버를 쿼리하고 클러스터에 생성된 모든 개체에 대한 모든 리소스 구성을 복사본으로 저장한다.
예를 들어 백업 스크립트에서 사용할 수 있는 명령 중 하나는 kubectl 유틸리티의 get all 명령을 사용하여 모든 포드, 배포 및 서비스를 가져오고 출력을 YAML 형식으로 추출한 다음 해당 파일을 저장하는 것이다. 
이는 소수의 리소스 그룹만을 위한 것이다. 고려해야 할 다른 많은 리소스 그룹이 있다. 
물론 그 솔루션을 직접 개발할 필요는 없다. Heptio가 만든 'Ark'나 'Velero'와 같은 도구들이 도와줄 것이다.
이 도구들은 Kubernetes API를 사용하여 Kubernetes 클러스터를 백업하는 데 도움이 된다.

이제 etcd로 넘어가보자. etcd 클러스터는 클러스터 상태에 대한 정보를 저장한다. 
따라서 클러스터 자체, 노드 및 클러스터 내에서 생성된 다른 모든 리소스에 대한 정보가 여기에 저장된다. 
따라서 이전과 같이 리소스를 백업하는 대신 etcd 서버 자체를 백업하도록 선택할 수 있다. 
앞에서 살펴본 것처럼 etcd 클러스터는 마스터 노드에서 호스팅된다. 
etcd를 구성하면서 모든 데이터가 저장될 위치, 즉 데이터 디렉토리를 지정했다. 백업 도구로 백업하도록 구성할 수 있는 디렉터리이다. 
etcd는 내장 스냅샷 솔루션을 가지고 있다. 
etcd 데이터베이스를 스냅샷으로 만들 수 있는데, etcd 컨트롤 유틸리티의 snapshot save 명령을 사용하면 된다. 
스냅샷 이름은 snapshot.db로 지정해보자. 현재 디렉토리에 스냅샷 파일이 생성된다. 다른 위치에 생성하려면 전체 경로를 지정하면 된다. 
백업의 상태를 확인하려면 snapshot status 명령을 사용하면 된다. 
이후에 클러스터를 복원하려면 첫째로, Kube API 서버 서비스를 중지해야 한다.
이는 etcd 클러스터를 다시 시작해야 하기 때문이며, Kube API 서버는 이에 의존한다. 
그리고 etcd controls snapshot restore 명령을 실행하면서, 백업 파일의 경로를 snapshot.db 파일로 설정한다.
