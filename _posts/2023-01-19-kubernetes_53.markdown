---
layout: post
title: "Kubernetes_53 Image Security"
date: 2023-01-19
last_modified_at: 2023-01-19
categories: [Kubernetes]
tags: [Kubernetes]
---

# Image Security

이미지 이름의 기본부터 시작하여 보안 이미지 저장소와 보안 저장소의 이미지를 사용하도록 pod를 구성하는 방법에 대해 알아보자.   
앞서 웹 앱, 데이터베이스, Redis 캐시 등 다양한 종류의 애플리케이션을 호스팅하는 여러 종류의 pod를 배포했다.   

간단한 pod 정의 파일로 시작해보자.   
여기서는 Nginx 이미지를 사용하여 Nginx 컨테이너를 배포했다.   
```
apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod
spec:
  containers:
  - name: nginx
    image: nginx
```

<img width="681" alt="스크린샷 2023-01-20 오전 1 29 44" src="https://user-images.githubusercontent.com/83587720/213498491-dce9ec6a-69a3-431f-a151-aa5ad89ed04c.png">
이 이미지 이름을 자세히 살펴보자.   
이름은 Nginx이지만 이 이미지는 무엇이고 이 이미지는 어디에서 가져온 것일까?   
이 이름은 도커의 이미지 명명 규칙을 따른다.   
여기서 Nginx는 이미지 또는 리포지토리 이름이다.   
Nginx라고 말하지만, 그것은 사실 library/Nginx이다.   

첫 번째 부분은 사용자 또는 계정 이름을 나타낸다.   
따라서 사용자 또는 계정 이름을 제공하지 않으면 라이브러리로 간주된다.   

라이브러리는 도커의 공식 이미지가 저장되는 기본 계정의 이름이다.   
이러한 이미지는 모범 사례를 홍보하고 이러한 공식 이미지를 검토하고 게시하는 전담 팀에 의해 유지 관리된다.   
계정을 만들고 그 아래에 저장소나 이미지를 만든다면 유사한 패턴을 사용할 것이다.   
주로 library 대신 유저의 이름이거나 유저의 회사 이름이 될 것이다.   

자, 이 이미지들은 어디에 저장되고 어디서 가져올까?   
이미지를 가져올 위치를 지정하지 않았기 때문에 도커의 기본 레지스트리인 도커 허브일 것이라고 생각한다.   
DNS 이름은 docker.io이다.   

레지스트리는 모든 이미지가 저장되는 곳이다.   
새 이미지를 만들거나 이미지를 업데이트할 때마다 해당 이미지를 레지스트리에 푸시하고 다른 사용자가 이 응용 프로그램을 배포할 때마다 레지스트리에서 가져온다.   
다른 인기 있는 레지스트리도 많이 있다.   
구글의 레지스트리는 gcr.io에 있으며, 클러스터에서 엔드 투 엔드 테스트를 수행하는 데 사용되는 것과 같은 많은 쿠버네티스 관련 이미지가 저장되어 있다.   
이것들은 모두 누구나 다운로드하고 접근할 수 있는 공개적으로 접근 가능한 이미지들이다.   

공용으로 제공해서는 안 되는 애플리케이션이 사내에 구축되어 있는 경우 내부 개인 레지스트리를 호스팅하는 것이 좋은 해결책이 될 수 있다.   
AWS, Azure 또는 GCP와 같은 많은 클라우드 서비스 공급자는 기본적으로 개인 레지스트리를 제공한다.   
Docker 허브, Google의 레지스트리 또는 내부 개인 레지스트리에 있는 이러한 솔루션에서 자격 증명 집합을 사용하여 액세스할 수 있도록 리포지토리를 비공개로 설정할 수 있다.   

Docker의 관점에서 개인 이미지를 사용하여 컨테이너를 실행하려면 먼저 Docker login 명령을 사용하여 개인 레지스트리에 로그인한다.   
그리고 자격 증명을 입력한다. 성공하면 개인 레지스트리의 이미지를 사용하여 응용프로그램을 실행한다.   

pod 정의 파일로 돌아가 개인 레지스트리의 이미지를 사용하려면 이미지 이름을 개인 레지스트리의 전체 경로로 바꾼다.   
하지만 로그인 부분인 인증을 어떻게 구현할까?   
Kubernetes는 개인 레지스트리에 액세스하기 위한 자격 증명을 어떻게 얻을까?   
Kubernetes 내에서, 우리는 이미지가 작업자 노드에서 도커 런타임에 의해 당겨지고 실행된다는 것을 알고 있다.   

Worker 노드에서 도커 런타임에 자격 증명을 전달하는 방법은 무엇일까?   
이를 위해 먼저 자격 증명이 포함된 secret object를 만든다.   
secret은 도커 registry type이고 그것을 regcred라고 이름 붙여보자.   
Docker 레지스트리는 Docker 자격 증명을 저장하기 위해 만들어진 기본 제공 secret 유형이다.   
그런 다음 레지스트리 서버 이름, 레지스트리에 액세스할 사용자 이름, 암호 및 사용자의 전자 메일 주소를 지정한다.   
그 후 이미지 풀 시크릿 섹션에서 pod 정의 파일 내부의 secret을 지정한다.   
pod가 생성되면 Worker 노드의 Kubernetes 또는 Kubelet은 비밀의 자격 증명을 사용하여 이미지를 가져온다.   

