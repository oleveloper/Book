---
layout: post
title: "Kubernetes_08"
date: 2023-01-03
last_modified_at: 2023-01-03
categories: [Kubernetes]
tags: [Kubernetes]
---

# PODs
pods에 대한 이해를 시작하기 전에 다음 사항이 이미 설정되어 있다고 가정하자.
앱이 이미 Docker 이미지로 개발되고 내장되어 있으며 Docker Hub와 같은 Docker 저장소에서 사용할 수 있다고 가정한다.
그래서 쿠버네티스는 이것을 내려받을 수 있다.
우리는 쿠버네티스 클러스터가 이미 설정되어 작동하고 있다고 가정한다.
이것은 단일 노드 설정일 수도 있고, 다중 노드 설정일 수도 있다. (중요하지 않다.)
그리고 모든 서비스가 실행중이어야 한다.

이전에 언급하였듯, 우리의 궁극적인 목표는 쿠버네티스에서 클러스터의 Worker 노드로 구성된 시스템 셋에
컨테이너 형태로 앱을 배포하는 것이다.

그러나 쿠버네티스는 Worker 노드 컨테이너에 직접적으로 배포하지 않는다.
컨테이너는 pods로 알려진 쿠버네티스 오브젝트에 캡슐화된다. 

pods는 애플리케이션의 단일 인스턴스이다.
pod는 쿠버네티스에서 만들 수 있는 가장 작은 오브젝트이다.

가장 간단한 케이스는, 애플리케이션의 단일 인스턴스가 있는 단일 노드 쿠버네티스 클러스터가
pod에 캡슐화 된 단일 Docker 컨테이너에서 실행되는 모습이다. 

애플리케이션에 접근하는 사용자 수가 증가하여 애플리케이션을 확장하는 경우에는 어떻게 해야할까?
부하를 분산하려면 웹 애플리케이션의 인스턴스를 추가해야한다.
그러면 추가 인스턴스 작업을 어디서 해야할까? 같은 pod 안에 새 컨테이너 인스턴스를 추가해야할까? 
답은 '아니오'이다. 동일한 애플리케이션의 새 인스턴스와 함께 새 pod를 생성한다.
웹 애플리케이션의 두 인스턴스가 동일한 쿠버네티스 시스템 또는 노드의 두 개의 별도 pod에서 실행된다.

사용자 기반이 더 증가하고 현재 노드에 충분한 용량이 없는 경우에는 어떻게 해야할까?
클러스터의 새로운 노드에는 항상 추가 pod를 배포할 수 있다.
클러스터의 물리적인 용량을 확장하기 위해 클러스터에 새 노드가 추가된다.

여기서 설명하고자 하는 것은, pod가 일반적으로 애플리케이션을 실행하는 컨테이너와 1:1 관계를 맺고 있다는 것이다.
scale-up 하려면 새 pod를 만든다. 
scale-down 하려면 기존 pod를 삭제한다.
기존 pod에 컨테이너를 추가해 애플리케이션을 확장할 수는 없다.

하나의 pod 안에 하나의 컨테이너가 존재하는 것에 어떠한 제한이 있는가?
아니다. 일반적으로 동일한 종류의 여러 컨테이너가 아니라는 점을 제외하고는 하나의 pod에 여러 컨테이너가 존재할 수 있다.

앞서 언급한 바와 같이, 애플리케이션을 확장하는 것이 목적이라면 pod를 추가로 만들어야 한다. 
그러나 유저 프로세스와 같은 웹 애플리케이션 프로그램 작업을 수행하는 보조 컨테이너를 애플리케이션 컨테이너와 함께 사용하려는 경우가 있다.
이 경우에는 두 컨테이너를 동일한 pod 안에 포함시킬 수 있으므로, 
새 애플리케이션 컨테이너가 생성되거나 소멸할 때 보조 컨테이너도 그 궤를 같이 한다.
두 컨테이너는 동일한 네트워크 공간을 공유하기 때문에 서로를 로컬 호스트로 참조해 직접 통신할 수도 있다.
또한 동일한 스토리지 공간을 쉽게 공유할 수도 있다.

