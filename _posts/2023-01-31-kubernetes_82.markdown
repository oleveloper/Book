---
layout: post
title: "Kubernetes_82 Worker Node Failure"
date: 2023-01-31
last_modified_at: 2023-01-31
categories: [Kubernetes]
tags: [Kubernetes]
---

# Worker Node Failure
worker 노드 오류를 해결하는 다양한 방법을 살펴보도록 하자.

## check Node Status
다시 한 번 클러스터의 노드 상태를 확인하는 것으로 시작한다.
```
kubectl get nodes
```
node의 상태가 Ready인가 아니면 Not ready(NotReady)인가?
not ready 상태라면 kubectl describe node 명령을 사용하여 노드에 대한 세부 정보를 확인한다.
```
kubectl describe node worker-1
```

<img width="1041" alt="스크린샷 2023-02-01 오전 12 42 26" src="https://user-images.githubusercontent.com/83587720/215806938-d7ce02b3-786c-4a50-8b31-a0765f773cdb.png">   
각 노드에는 노드가 실패한 이유를 알려줄 수 있는 일련의 컨디션이 있다.   
Status에 따라 true, false 또는 unknown으로 설정된다.   
노드에 디스크 공간이 부족하면 디스크 부족 플래그(OutOfDisk)가 true로 설정된다.   
노드의 메모리가 부족하면 memory pressure 플래그(MemoryPressure)가 true로 설정된다.   
디스크 용량이 낮으면 disk pressure 플래그(DiskPressure)가 true로 설정된다.   
마찬가지로 프로세스가 너무 많으면 PID Pressure 플래그(PIDPressure)가 true으로 설정된다.   
마지막으로 노드 전체가 정상이면 ready 플래그(Ready)가 true로 설정된다.   

```
kubectl describe node worker-1
```
crash로 인해 worker 노드가 마스터와의 통신을 중지하면 이러한 상태는 알 수 없음(unknown)으로 설정된다.   
이는 노드 loss 가능성을 나타낼 수 있다.   
이 경우 노드 자체의 상태를 확인하기 위해 마지막 heartbeat time field를 확인하여 노드가 충돌했을 가능성이 있는 시간을 찾는다.   
노드에 crash가 발생한 경우에는 노드를 복구한다.   

노드에서 가능한 CPU 메모리 및 디스크 공간을 확인하자.
```
top
df -h
```

## Check Kubelet Status
kubelet의 상태를 확인한다.
```
service kubelet status
```

그리고 kubelet 로그를 확인해보자.
```
sudo journalctl -u kubelet
```

## Check Certificates
kubelet 인증서를 확인하여 인증서가 만료되지 않았는지, 올바른 그룹의 일부인지, 인증서가 올바른 CA에서 발급되었는지 확인해보자.
```
openssl x509 -in /var/lib/kubelet/worker-1.crt -text
```
